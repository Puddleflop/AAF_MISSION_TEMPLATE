// DESCRIPTION ////////////////////////////////////////////////////////////////////////////////////
/*
	- Description.ext handles all sorts of framework important settings.
*/
// HEADER /////////////////////////////////////////////////////////////////////////////////////////
class Header
{
	gameType = Coop;
	minPlayers = 1;
	maxPlayers = 60;
};

//MISSION PRESENTATION (set your mission name here, it is also a good idea to add version numbers so you can differentiate between mission versions!)
author = "AAF";
#define MISSIONNAME "AAF Framework"
#define MISSIONDESCRIPTION "Long mission description text seen in mission load and mission select screen."
// SOUNDS UNCOMMENT AND COMPLETE IF ADDING CUSTOM SOUNDS //////////////////////////////////////////
/*
class CfgSounds {
	sounds[] = {};
	class wolf1 {
		name = "my_wolf_sound"; // how the sound is referred to in the editor (e.g. trigger effects)
		sound[] = { "sound\wolf1.ogg", 1, 1, 100 };// filename, volume, pitch, distance (optional)
		titles[] = { 1, "*wolf growls*" }; // subtitle delay in seconds, subtitle text
	};
	class playerIsHurt {
		name = "Man, you are injured?! - by NPC";
		sound[] = { "sound\playerIsHurt1.ogg", 1, 1 };
		titles[] = {
			0, "Dude! You are covered in blood!",
			6, "Are you sure you are OK?!"
		};
	};
	class AnotherSound {
		name = "Sound with advanced subtitle options";
		sound[] = { "somesound.ogg", 1, 1 };
		forceTitles = true;			// will display titles even if global show titles option is off
		titlesFont = "LCD14";		// titles font family
		titlesSize = 0.1;			// titles font size
		titlesStructured = true;	// treat titles as Structured Text (see below)
		titles[] = {
			0, <t color="#ff0000">Red text</t>,
			1, <t color="#00ff00">Green text</t>
		};
	};
};
*/
// MUSIC UNCOMMENT AND COMPLETE IF USING CUSTOM MUSIC /////////////////////////////////////////////
/*
class CfgMusic {
	tracks[] = {};
	class MyIntro {
		name	= "My intro music"; // display name
		sound[]	= { "\sound\filename.ogg", db + 0, 1.0 }; // filename, volume, pitch
	};
	class Ludwig9 {
		name	= "Ludwig Van Beethoven's Ninth Symphony";
		sound[]	= { "\sound\ludwig9.ogg", db + 10, 1.0 };
	};
};
*/
// LEAVE EVERYTHING BELOW THIS LINE ALONE /////////////////////////////////////////////////////////
OnLoadName = MISSIONNAME; // Mission name (short)
briefingName = MISSIONNAME; // Mission name in mission select
onLoadMission = MISSIONDESCRIPTION; // Text that appears while mission is loading
loadScreen = "img\loading.paa"; // Image that appears while mission is Loading
overviewText = MISSIONDESCRIPTION; // Mission description in mission select

// RESPAWN
respawn = "BASE";
respawnDelay = 30;
respawnDialog = 0;
//respawnButton = 1; // allows player manual respawn
respawnOnStart = -1; //setting this to -1 stops onplayerrespawn.sqf from firing on start.

// Misc
disabledAI = 1; //Turns off AI filling player slots.
enableDebugConsole = 1;
disableChannels[]={0,2,4,5};

// CORPSES & WRECKS
corpseManagerMode = 3;
corpseLimit = 20;
corpseRemovalMinTime = 200;
corpseRemovalMaxTime = 600;

wreckManagerMode = 3;
wreckLimit = 10;
wreckRemovalMinTime = 60;
wreckRemovalMaxTime = 200;
minPlayerDistance = 1200;
// CFP THINGS//////////////////////////////////////////////////////////////////////////////////////
CFP_DisableRandom = True;
ALiVE_OverrideLoadout = True;

// PARAMETERS /////////////////////////////////////////////////////////////////////////////////////
class Params {};
// FUNCTIONS///////////////////////////////////////////////////////////////////////////////////////
class CfgFunctions {
	class lrm { //mytag
		class Functions { //myCategory
			class gear {file = "LRM\gear.sqf";}; //lrm_fnc_gear
			//class init {"LRM\init.sqf"}; //lrm_fnc_init
		};
	};
};
// AlLLOWED REMOTE EXEC////////////////////////////////////////////////////////////////////////////
class CfgRemoteExec {
	class Functions { // List of script functions allowed to be sent from client via remoteExec
		// 2 - allowed, ignoring whitelist (default, because of backward compatibility)
		mode = 2;//1;	// whitelist
		jip = 0;	// JIP not allowed
		//class BIS_fnc_effectKilledAirDestruction { allowedTargets = 0; jip = 0; };
		//class BIS_fnc_effectKilledSecondaries { allowedTargets = 0; jip = 0; };
		//class BIS_fnc_objectVar { allowedTargets = 0; jip = 0; };
		//class BIS_fnc_setCustomSoundController { allowedTargets = 0; jip = 0; };
		//class BIS_fnc_debugConsoleExec { allowedTargets = 0; }; // allow debug console - optional
	};
	class Commands { // List of script commands allowed to be sent from client via remoteExec
		mode = 2; // 2 - allowed, ignoring whitelist (default, because of backward compatibility)
	};
};
